# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    parallelism: 1
    environment:
      TEST_INHOUSE: false

    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -U pip
            pip install -U -r requirements.txt
            pip install codecov

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: install test dependencies
          command: |
            . venv/bin/activate
            pip install -r test_requirements.txt

      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            mkdir test-results
            sudo apt-get -y install git-lfs
            git lfs pull
            py.test --junitxml=test-results/junit.xml --verbose


      - store_test_results:
          path: test-results
          destination: tr2

      - store_artifacts:
          path: test-results
          destination: tr1


  deploy_pypi:
    docker:
      - image: circleci/python:3.6
    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: configure pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: setup_venv
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -U cryptography
            pip install -U twine setuptools wheel

      - run:
          name: check_version
          command: |
            echo "CIRCLE_TAG: $CIRCLE_TAG"
            . venv/bin/activate
            python setup.py check_version -e $CIRCLE_TAG

      - run:
          name: build wheels
          command: |
            . venv/bin/activate
            python setup.py sdist
            python setup.py bdist_wheel

      - run:
          name: deploy
          command: |
            . venv/bin/activate
            twine upload dist/* --verbose --config-file ~/.pypirc

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /^v\d+(\.\d+)*(\.[0-9A-Za-z]*)*/
            branches:
              ignore: /.*/
      - deploy_pypi:
          requires:
            - build
          filters:
            tags:
              only: /^v\d+(\.\d+)*(\.[0-9A-Za-z]*)*/
            branches:
              ignore: /.*/
  run_tests:
    jobs:
      - build
